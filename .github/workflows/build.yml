name: "Build LineageOS libart library"

env:
  CONFIGURATION: "repos.json"
  OUT_DIR: "out"

on:
  workflow_dispatch:

jobs:
  Set-repos:
    name: "🐂 Parse repos.json"
    runs-on: ubuntu-latest
    outputs:
      repos: ${{ steps.generate-matrix.outputs.repos }}
    steps:
      - name: "😄 Checkout"
        uses: actions/checkout@v3

      - name: "😆 Generate Matrix"
        id: generate-matrix
        run: |
          echo "repos<<EOF" >> $GITHUB_OUTPUT
          cat  ${{ env.CONFIGURATION }} >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

  Build-LineageOS-libart:
    name: "🐎 Build LineageOS libart"
    runs-on: ubuntu-latest
    needs:
      - Set-repos
    strategy:
      max-parallel: 2
      fail-fast: false
      matrix:
        repos: ${{ fromJSON(needs.Set-repos.outputs.repos) }}
    env:
      workerDir: ${{ matrix.repos.androidSource.workerDir }}
      kernelName: ${{ matrix.repos.androidSource.name }}
      kernelRepo: ${{ matrix.repos.androidSource.repo }}
      branch: ${{ matrix.repos.androidSource.branch }}
      kernelDevice: ${{ matrix.repos.androidSource.device }}
      
    steps:
      - name: "✨ Create working dir"
        run: mkdir -p $workerDir

      - name: "⭐ config env and download repo"
        run: |
          git config --global user.email "rankalpha@yandex.com"
          git config --global user.name "rankalpha"
          mkdir ~/bin
          PATH=~/bin:$PATH
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
          chmod a+x ~/bin/repo
          
      - name: "🌟 init git android branch source"
        working-directory: ./${{ env.workerDir }}
        run: ~/bin/repo init -u https://github.com/LineageOS/android.git -b $branch --git-lfs --depth=1

      - name: "🌟 Clone android branch source"
        working-directory: ./${{ env.workerDir }}
        run: |
          ~/bin/repo sync -c -j8 --force-sync --no-clone-bundle --no-tags LineageOS/android_art
          ~/bin/repo sync -c -j8 --force-sync --no-clone-bundle --no-tags LineageOS/android_build
          ~/bin/repo sync -c -j8 --force-sync --no-clone-bundle --no-tags LineageOS/android_vendor_lineage
          ~/bin/repo sync -c -j8 --force-sync --no-clone-bundle --no-tags LineageOS/android_build_soong
          ~/bin/repo sync -c -j8 --force-sync --no-clone-bundle --no-tags LineageOS/android_build_blueprint
          ~/bin/repo sync -c -j8 --force-sync --no-clone-bundle --no-tags platform/prebuilts/go/linux-x86
          ~/bin/repo sync -c -j8 --force-sync --no-clone-bundle --no-tags external/golang-protobuf
          ~/bin/repo sync -c -j8 --force-sync --no-clone-bundle --no-tags LineageOS/android_prebuilts_build-tools
          
      - name: "🎶 Build android"
        working-directory: ./${{ env.workerDir }}
        run: |
          source ./build/envsetup.sh
          breakfast lavender
          mmm art:runtime

      - name: "⭐ Install prerequisites"
        run: |
          sudo apt-get update
          sudo apt-get install gnupg flex bison gperf libsdl1.2-dev
          sudo apt-get install squashfs-tools build-essential zip curl libncurses5-dev 
          sudo apt-get install zlib1g-dev openjdk-8-jre openjdk-8-jdk pngcrush schedtool 
          sudo apt-get install libxml2 libxml2-utils xsltproc lzop libc6-dev schedtool 
          sudo apt-get install g++-multilib lib32z1-dev 
          sudo apt-get install gcc-multilib maven tmux screen w3m ncftp
          sudo apt-get install libncurses5-dev 
          sudo apt-get install openjdk-8-jdk
          
      - name: "💛 Upload libart.so"
        uses: actions/upload-artifact@v3
        with:
          name: libart.so
          path: ./${{ env.kernelDir }}/${{ env.OUT_DIR }}/arch/${{ env.ARCH }}/boot
          if-no-files-found: ignore
          retention-days: 7

